"use strict";
/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.errorFromName = exports.errorFromCode = exports.MissingSignerError = exports.ExpectedOwnerWrapperProgramError = exports.UnexpectedReserveAuthorityError = exports.UnexpectedReserveTokenAccountError = exports.InvalidTokenMintError = exports.InvalidTokenAccountError = exports.UnexpectedRentError = exports.UnexpectedSystemProgramError = exports.UnexpectedToken2022ProgramError = exports.UnexpectedTokenProgramError = exports.UnexpectedWrapperTokenError = void 0;
const createErrorFromCodeLookup = new Map();
const createErrorFromNameLookup = new Map();
/**
 * UnexpectedWrapperToken: 'Unexpected wrapper token mint'
 *
 * @category Errors
 * @category generated
 */
class UnexpectedWrapperTokenError extends Error {
    constructor() {
        super("Unexpected wrapper token mint");
        this.code = 0x0;
        this.name = "UnexpectedWrapperToken";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, UnexpectedWrapperTokenError);
        }
    }
}
exports.UnexpectedWrapperTokenError = UnexpectedWrapperTokenError;
createErrorFromCodeLookup.set(0x0, () => new UnexpectedWrapperTokenError());
createErrorFromNameLookup.set("UnexpectedWrapperToken", () => new UnexpectedWrapperTokenError());
/**
 * UnexpectedTokenProgram: 'Unexpected SPL Token Program'
 *
 * @category Errors
 * @category generated
 */
class UnexpectedTokenProgramError extends Error {
    constructor() {
        super("Unexpected SPL Token Program");
        this.code = 0x1;
        this.name = "UnexpectedTokenProgram";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, UnexpectedTokenProgramError);
        }
    }
}
exports.UnexpectedTokenProgramError = UnexpectedTokenProgramError;
createErrorFromCodeLookup.set(0x1, () => new UnexpectedTokenProgramError());
createErrorFromNameLookup.set("UnexpectedTokenProgram", () => new UnexpectedTokenProgramError());
/**
 * UnexpectedToken2022Program: 'Unexpected Token 2022 Program'
 *
 * @category Errors
 * @category generated
 */
class UnexpectedToken2022ProgramError extends Error {
    constructor() {
        super("Unexpected Token 2022 Program");
        this.code = 0x2;
        this.name = "UnexpectedToken2022Program";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, UnexpectedToken2022ProgramError);
        }
    }
}
exports.UnexpectedToken2022ProgramError = UnexpectedToken2022ProgramError;
createErrorFromCodeLookup.set(0x2, () => new UnexpectedToken2022ProgramError());
createErrorFromNameLookup.set("UnexpectedToken2022Program", () => new UnexpectedToken2022ProgramError());
/**
 * UnexpectedSystemProgram: 'Unexpected System Program'
 *
 * @category Errors
 * @category generated
 */
class UnexpectedSystemProgramError extends Error {
    constructor() {
        super("Unexpected System Program");
        this.code = 0x3;
        this.name = "UnexpectedSystemProgram";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, UnexpectedSystemProgramError);
        }
    }
}
exports.UnexpectedSystemProgramError = UnexpectedSystemProgramError;
createErrorFromCodeLookup.set(0x3, () => new UnexpectedSystemProgramError());
createErrorFromNameLookup.set("UnexpectedSystemProgram", () => new UnexpectedSystemProgramError());
/**
 * UnexpectedRent: 'Unexpected Rent'
 *
 * @category Errors
 * @category generated
 */
class UnexpectedRentError extends Error {
    constructor() {
        super("Unexpected Rent");
        this.code = 0x4;
        this.name = "UnexpectedRent";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, UnexpectedRentError);
        }
    }
}
exports.UnexpectedRentError = UnexpectedRentError;
createErrorFromCodeLookup.set(0x4, () => new UnexpectedRentError());
createErrorFromNameLookup.set("UnexpectedRent", () => new UnexpectedRentError());
/**
 * InvalidTokenAccount: 'Invalid token account'
 *
 * @category Errors
 * @category generated
 */
class InvalidTokenAccountError extends Error {
    constructor() {
        super("Invalid token account");
        this.code = 0x5;
        this.name = "InvalidTokenAccount";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, InvalidTokenAccountError);
        }
    }
}
exports.InvalidTokenAccountError = InvalidTokenAccountError;
createErrorFromCodeLookup.set(0x5, () => new InvalidTokenAccountError());
createErrorFromNameLookup.set("InvalidTokenAccount", () => new InvalidTokenAccountError());
/**
 * InvalidTokenMint: 'Invalid token mint'
 *
 * @category Errors
 * @category generated
 */
class InvalidTokenMintError extends Error {
    constructor() {
        super("Invalid token mint");
        this.code = 0x6;
        this.name = "InvalidTokenMint";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, InvalidTokenMintError);
        }
    }
}
exports.InvalidTokenMintError = InvalidTokenMintError;
createErrorFromCodeLookup.set(0x6, () => new InvalidTokenMintError());
createErrorFromNameLookup.set("InvalidTokenMint", () => new InvalidTokenMintError());
/**
 * UnexpectedReserveTokenAccount: 'Unexpected reserve token account'
 *
 * @category Errors
 * @category generated
 */
class UnexpectedReserveTokenAccountError extends Error {
    constructor() {
        super("Unexpected reserve token account");
        this.code = 0x7;
        this.name = "UnexpectedReserveTokenAccount";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, UnexpectedReserveTokenAccountError);
        }
    }
}
exports.UnexpectedReserveTokenAccountError = UnexpectedReserveTokenAccountError;
createErrorFromCodeLookup.set(0x7, () => new UnexpectedReserveTokenAccountError());
createErrorFromNameLookup.set("UnexpectedReserveTokenAccount", () => new UnexpectedReserveTokenAccountError());
/**
 * UnexpectedReserveAuthority: 'Unexpected reserve authority'
 *
 * @category Errors
 * @category generated
 */
class UnexpectedReserveAuthorityError extends Error {
    constructor() {
        super("Unexpected reserve authority");
        this.code = 0x8;
        this.name = "UnexpectedReserveAuthority";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, UnexpectedReserveAuthorityError);
        }
    }
}
exports.UnexpectedReserveAuthorityError = UnexpectedReserveAuthorityError;
createErrorFromCodeLookup.set(0x8, () => new UnexpectedReserveAuthorityError());
createErrorFromNameLookup.set("UnexpectedReserveAuthority", () => new UnexpectedReserveAuthorityError());
/**
 * ExpectedOwnerWrapperProgram: 'Expected account to be owned by wrapper program'
 *
 * @category Errors
 * @category generated
 */
class ExpectedOwnerWrapperProgramError extends Error {
    constructor() {
        super("Expected account to be owned by wrapper program");
        this.code = 0x9;
        this.name = "ExpectedOwnerWrapperProgram";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, ExpectedOwnerWrapperProgramError);
        }
    }
}
exports.ExpectedOwnerWrapperProgramError = ExpectedOwnerWrapperProgramError;
createErrorFromCodeLookup.set(0x9, () => new ExpectedOwnerWrapperProgramError());
createErrorFromNameLookup.set("ExpectedOwnerWrapperProgram", () => new ExpectedOwnerWrapperProgramError());
/**
 * MissingSigner: 'Missing signer'
 *
 * @category Errors
 * @category generated
 */
class MissingSignerError extends Error {
    constructor() {
        super("Missing signer");
        this.code = 0xa;
        this.name = "MissingSigner";
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(this, MissingSignerError);
        }
    }
}
exports.MissingSignerError = MissingSignerError;
createErrorFromCodeLookup.set(0xa, () => new MissingSignerError());
createErrorFromNameLookup.set("MissingSigner", () => new MissingSignerError());
/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 * @category generated
 */
function errorFromCode(code) {
    const createError = createErrorFromCodeLookup.get(code);
    return createError != null ? createError() : null;
}
exports.errorFromCode = errorFromCode;
/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 * @category generated
 */
function errorFromName(name) {
    const createError = createErrorFromNameLookup.get(name);
    return createError != null ? createError() : null;
}
exports.errorFromName = errorFromName;
