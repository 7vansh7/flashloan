"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionArenaKeyMap = exports.TransactionConfigMap = exports.TransactionType = void 0;
const web3_js_1 = require("@solana/web3.js");
var TransactionType;
(function (TransactionType) {
    // BASE LENDING ACTIONS
    TransactionType["DEPOSIT"] = "DEPOSIT";
    TransactionType["WITHDRAW"] = "WITHDRAW";
    TransactionType["REPAY"] = "REPAY";
    TransactionType["BORROW"] = "BORROW";
    // FLASHLOANS
    TransactionType["FLASHLOAN"] = "FLASHLOAN";
    TransactionType["LOOP"] = "LOOP";
    TransactionType["REPAY_COLLAT"] = "REPAY_COLLAT";
    TransactionType["LONG"] = "LONG";
    TransactionType["SHORT"] = "SHORT";
    // SETUP
    TransactionType["CREATE_ACCOUNT"] = "CREATE_ACCOUNT";
    TransactionType["CREATE_ATA"] = "CREATE_ATA";
    // ACCOUNT MANAGEMENT
    TransactionType["CLOSE_ACCOUNT"] = "CLOSE_ACCOUNT";
    TransactionType["CLOSE_POSITION"] = "CLOSE_POSITION";
    TransactionType["MOVE_POSITION"] = "MOVE_POSITION";
    TransactionType["WITHDRAW_ALL"] = "WITHDRAW_ALL";
    TransactionType["TRANSFER_AUTH"] = "TRANSFER_AUTH";
    // SWB
    TransactionType["CRANK"] = "CRANK";
    // NATIVE STAKE ACTIONS
    TransactionType["DEPOSIT_STAKE"] = "DEPOSIT_STAKE";
    TransactionType["WITHDRAW_STAKE"] = "WITHDRAW_STAKE";
    TransactionType["INITIALIZE_STAKED_POOL"] = "INITIALIZE_STAKED_POOL";
    TransactionType["ADD_STAKED_BANK"] = "ADD_STAKED_BANK";
    // LST
    TransactionType["STAKE_TO_STAKE"] = "STAKE_TO_STAKE";
    TransactionType["MINT_LST_NATIVE"] = "MINT_LST_NATIVE";
    TransactionType["SWAP_TO_SOL"] = "SWAP_TO_SOL";
    TransactionType["SOL_TO_LST"] = "SOL_TO_LST";
    // EMISSIONS
    TransactionType["WITHDRAW_EMISSIONS"] = "WITHDRAW_EMISSIONS";
    // LIQUIDATE
    TransactionType["LIQUIDATE_ACCOUNT"] = "LIQUIDATE_ACCOUNT";
    // BANK and GROUPS
    TransactionType["CREATE_PERM_BANK"] = "CREATE_PERM_BANK";
    TransactionType["CREATE_GROUP"] = "CREATE_GROUP";
    TransactionType["JUPITER_SWAP"] = "JUPITER_SWAP";
})(TransactionType || (exports.TransactionType = TransactionType = {}));
exports.TransactionConfigMap = {
    [TransactionType.DEPOSIT]: {
        label: "Depositing",
    },
    [TransactionType.WITHDRAW]: {
        label: "Withdrawing",
    },
    [TransactionType.REPAY]: {
        label: "Repaying",
    },
    [TransactionType.BORROW]: {
        label: "Borrowing",
    },
    [TransactionType.LOOP]: {
        label: "Looping",
    },
    [TransactionType.REPAY_COLLAT]: {
        label: "Repaying Collateral",
    },
    [TransactionType.LONG]: {
        label: "Long Position",
    },
    [TransactionType.SHORT]: {
        label: "Short Position",
    },
    [TransactionType.CRANK]: {
        label: "Updating latest prices",
    },
    [TransactionType.FLASHLOAN]: { label: "Flashloan" },
    [TransactionType.CREATE_ACCOUNT]: { label: "Creating Account" },
    [TransactionType.CREATE_ATA]: { label: "Creating ATA" },
    [TransactionType.CLOSE_ACCOUNT]: { label: "Closing Account" },
    [TransactionType.CLOSE_POSITION]: { label: "Closing Position" },
    [TransactionType.MOVE_POSITION]: { label: "Moving Position" },
    [TransactionType.WITHDRAW_ALL]: { label: "Withdraw All" },
    [TransactionType.TRANSFER_AUTH]: { label: "Transfer Auth" },
    [TransactionType.DEPOSIT_STAKE]: { label: "Deposit Stake" },
    [TransactionType.WITHDRAW_STAKE]: { label: "Withdraw Stake" },
    [TransactionType.WITHDRAW_EMISSIONS]: { label: "Withdraw Emissions" },
    [TransactionType.LIQUIDATE_ACCOUNT]: { label: "Liquidate Account" },
    [TransactionType.STAKE_TO_STAKE]: { label: "Stake to Stake" },
    [TransactionType.MINT_LST_NATIVE]: { label: "Mint LST Native" },
    [TransactionType.CREATE_PERM_BANK]: { label: "Create Perm Bank" },
    [TransactionType.CREATE_GROUP]: { label: "Create Group" },
    [TransactionType.SWAP_TO_SOL]: { label: "Swap to SOL" },
    [TransactionType.SOL_TO_LST]: { label: "SOL to LST" },
    [TransactionType.JUPITER_SWAP]: { label: "Swapping tokens" },
    [TransactionType.INITIALIZE_STAKED_POOL]: { label: "Initializing Staked Pool" },
    [TransactionType.ADD_STAKED_BANK]: { label: "Adding Staked Bank" },
};
exports.TransactionArenaKeyMap = {
    [TransactionType.DEPOSIT]: new web3_js_1.PublicKey("ArenaDeposit1111111111111111111111111111111"),
    [TransactionType.WITHDRAW]: new web3_js_1.PublicKey("ArenaWithdraw111111111111111111111111111111"),
    [TransactionType.BORROW]: new web3_js_1.PublicKey("ArenaBorrow11111111111111111111111111111111"),
    [TransactionType.REPAY]: new web3_js_1.PublicKey("ArenaRepay111111111111111111111111111111111"),
    [TransactionType.REPAY_COLLAT]: new web3_js_1.PublicKey("ArenaRepayCo11at111111111111111111111111111"),
    [TransactionType.LONG]: new web3_js_1.PublicKey("ArenaLong1111111111111111111111111111111111"),
    [TransactionType.SHORT]: new web3_js_1.PublicKey("ArenaShort111111111111111111111111111111111"),
    [TransactionType.CLOSE_POSITION]: new web3_js_1.PublicKey("ArenaC1ose111111111111111111111111111111111"),
    // Add more mappings if needed
};
